#!/usr/local/bin/perl
use strict; use warnings;
use File::Copy;
############################
# ANONI - anoni jail populate
############################
my ($usb, $node) = @ARGV;
die "ARG1 /USB ARG2 HOSTNAME\n" unless (defined $node);
$usb =~ s%/\z%%;
############################
my $limit = 1000;
my $shell = '/bin/csh';
############################
my @list = 1..$limit;
############################
mkdir("/root/clan");
my @clan = qw(norm princess princess);
`pw groupadd $_` for (@clan);
cr_home($_) for (@list);
cr_usr($_) for (@list);
cr_key($node);
`chown :norm /HIVE/FEED/norm`;
############################
sub grp
{
	my $grp = 'norm';
	my $rnum = `jot -r 1 0 16`;
	$grp = 'prince' if ($rnum == 1);
	$grp = 'princess' if ($rnum == 0);
	return $grp;	
}
sub cr_home
{
	my ($usr) = @_;
	my $home = "/home/$usr/";
	my $ssh = "$home.ssh";
	`mkdir $home`;
############################
	mkdir("$ssh");
#	`cp $usb/KERN/conf/.vimrc $home`;
############################
	`cp $usb/KERN/conf/.cshrc $home`;
}
############################
sub cr_usr
{
	my ($usr) = @_;
	my $home = "/home/$usr/";
	`pw useradd -n $usr -d $home -s $shell`;
	`chmod -R 700 $home`;
	`chown -R $usr $home`;
	
	my $clan = clan();
	`pw usermod -n $usr -G wheel` if ($clan eq 'prince');
	`pw usermod -n $usr -G $clan`;
	`echo '$usr' >> /root/clan/$clan`; 
	print "$usr created\n";
############################
}
############################
sub cr_key
{
	my ($node) = @_;
############################
	for (@clan)	
	{
		my $ic = shift;
		open(my $ifh, '<', "/root/clan/$ic");
		my @ic = readline $ifh;
		close $ifh; chomp @ic;

		for (@ic)
		{
			my $iu = $_;
			my $idump = $usb."/BANK/host/$node/$ic/$iu";
			my $key = "/home/$iu/.ssh/id_rsa";
			my $pub = $key.'.pub';
			`mkdir -p $idump`;
############################
			if ($ic eq 'norm')	
			{	
				`ssh-keygen -q -N "" -t rsa -b 2048 -f $key`;
				copy($key, "$idump/id_rsa");
				copy($pub, "$idump/known_hosts");
				move($pub, "/home/$iu/.ssh/authorized_keys");
			}
############################
			elsif ($ic eq 'prince' || $ic eq 'princess')	
			{
				my @pass = neopass();
				`ssh-keygen -q -N "$pass[0]" -t rsa -b 2048 -f $key`;
				copy($key, "$idump/id_rsa");
				copy($pub, "$idump/known_hosts");
				move($pub, "/home/$iu/.ssh/authorized_keys");
				`echo "$pass[1]" > $idump/p`;
			}
			`chmod -R 700 /home/$iu/.ssh/`;
			print "$key created\n";
		}
	}
}
sub neopass
{
	my @p = qw(0 . 1 2 3 4 5 6 + 7 8 9 / * - q w e r a s d f z x c v);
	my @pass;
	my $cnt2 = 0;
	while ($cnt2 < 4)
	{
		my @set = `jot -r 5 0 26`;
		chomp @set;
		for (@set)
		{
			no warnings 'uninitialized';	
			$pass[0] .= $p[$_];
			$pass[1] .= $p[$_];
		}
		$cnt2++;
		$pass[1] .= ' ';
	}
############################
	chop $pass[1];
	return @pass;
}
