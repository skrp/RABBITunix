###################################
# MKRX   - network unix clones
#                              to0j
###################################
# INTRO ###########################
# journey to the land of unix
# experience C & shell & perl 

# ways of deep-sea secrets  
# raw-power of binary logic

# this ordeal 
# reward 1337

# hard for all
# way to wizard

# are you
# ready to go?
###################################
# README will prove you
# know nothing & learn much
# REQUIREMENT #####################
#   AMD64-machine
#   usb installer (freeBSD.10-3.AMD64.memstick.img)
#   usb INIT
#   usb-to-be-wiped 
# LAOYERS #########################
#    HARDWARE_LAYER   : AMD64
#       mobo cpu mem drive psu montior keyboard
#       library of raw actions to cpu
#    SOFTWARE_LAYER   : FreeBSD unix kernels 
#       mechanisation of actions to HARDWARE_LAYER
#       system-enviornment
#    INTERFACE_LAYER : shell c-libraries perl-libraries
#	permission-based access to SOFTWARE_LAYER
#       usr interactions with system-enviornment
#    NETWORK_LAYER   : IPv4 ethernet & wifi end-points
#       direct encrypted tunnels amongst IPv4 connected-nodes
#       traffic-relay from one to any in obfuscated fashion 
#           ex: usr->ANONI_A -> ANONI_D -> ANONI_J -> sleep 
#               ANONI_J -> ANONI_F -> ANONI_V -> sleep -> action 
# GUARENTE ########################
# simple uniform-standardization
# encourage plain understanding 
# purchase the truth if anonymous
# all usr accounts deleted after first access
# OTOPSK counter man-in-the-middle
# data-digest-stamp logs
# OVERVIEW ########################
# usr inserts FreeBSD 10.3 installer usb
# into an AMD64 computer
# installs FreeBSD 10.3 GENERIC
# sculpts kernel & world
# populates usb with the new-host OTOPSK $KEY
# usr trades $KEY amongst network for access to other hosts
# CLAN nfs-unix-groups allow persistent data accross ANONI sessions
# users ###########################
# con    
#    physical-host console user
# norm
#    ssh jail user
#    normal jail access to system
# heir
#    ssh jail user
#    only way to access host 
# lord 
#    host ssh capiscum super-user-group
#    each lord has their responsible section of system
#    wheel jail net zfs world log rep chron
# root ############################
# heir $KEY -> ssh ANONI heir 
# ANONI heir -> RABBIT $KEY -> ssh host RABBIT -> su root 
# TERMS ###########################
# OTOPSK - one time only pre shared key 
# RABBIT - alarm authenticated-wheel hole to host root
# ANONI  - external-anonymous access shell interface
# WORLD  - unix nfsv4 CLAN filesystem
# CLAN   - unix network groups
# NET    - network IPv4 lists
# PF_NET - sub-net white-list
# NODE   - individual machine on network
# CENSUS - network file index
# META   - index arrays 
# USB #############################
BANK
   NET 
   PF_NET
   CLAN 
   host/	
      NODE/ 
         usr/ p id_rsa.pub id_rsa 
KERN
   README
   bin/
		host programs
   jbin/
		jail programs
   conf/
		host conf files
   jconf/
		jail conf files
   HIVE/
		DEMON code
   install/
	        host install proceedure
   jinstall/
		jail install proceedure
META
   NAM
   PAT
   SIZ
   ENC
LOG
   misc/
   CENSUS 
      NODE/
# BEGIN ###########################
# keyboard F1-F12 are machine-unique 
# one will drop you into BIOS quickly upon boot
# power-one machine
# wait to see if mobo will present F? key
# or spam F? key
# drop to BIOS
# BIOS will reveal machine cpu
# look for boot options
# select usb device to boot
# trial & error until the freeBSD demon displayed
# curiousity & relentlessness rewards answer
# IMPORTANT #######################
# -    raw command typed into interface
#### - action 
CAPS - item a variable learnt from prior step
# INSTALL PROCEEDURE ##############
#### set bios boot from usb
#### boot FreeBSD install memstick
#### select Shell
# camcontrol devlist
#### this cmd returns all storage-devices
#### find storage-device & USB to over-write 
#### DRIVE = storage-device 
#### USB   = usb-device
#### INIT = name of INIT USB
#### NAME = think
#### INIT = name of INIT USB
#### ALFADATE = alffabet name
#### in doubt, unplug usb & run command again to find missing

# dd if=/dev/zero of=/dev/DRIVE bs=1M

#### wait a minute or let it finish
#### to finish
# ctrl-c

#### be sure only node drive & INIT usb inserted

# camcontrol devlist

#### insert usb-to-be-wiped

# camcontrol devlist

#### find new entry 
#### replace USB with device name
>>>> ex: ada0 da1

# dd if=/dev/zero of=/dev/USB bs=1M

>>>> if=/dev/zero of=/dev/da1 bs=1M

#### let it finish

# zfs snapshot INIT/KERN@ALFADATE

# zpool create NAME /dev/USB
# zfs send INIT/KERN@ALFADATE | zfs recv NAME/KERN

# zfs create NAME/BANK
# zfs create NAME/LOG
# zfs create NAME/META

# mkdir /NAME/LOG/misc
# mkdir /NAME/BANK/host/

# zfs snapshot NAME/KERN@ALPHADATE
# zpool export NAME
# exit

#### select Install
#### select Select

#### hostname new-node-name

#### tick via spacebar 
#### only have tick: doc src

#### select Auto (ZFS)
#### select Select (Install Proceed with Installation)
#### select stripe

#### tick DRIVE 
#### select YES

#### root pass
# root
# root

#### select Cancel
#### select NO
#### whatever
#### whatever
#### select YES

#### only tick dumpdev

#### select NO
#### select exit
#### select NO
#### select Reboot

#### put away installer usb & INIT usb
# --- REBOOT ---
# GENERIC_WORLD ###################
# zpool import -f usb
# cd /usb/KERN/install/
# /bin/sh /usb/KERN/install/1.INIT
# perl /usb/KERN/install/2.PORT /usb
# perl /usb/KERN/install/3.WORLD /usb node
# vim /etc/rc.conf && vim /etc/pf.conf && vim /etc/jail.conf && vim /etc/pf_net
# rm -r /usr/obj
# cd /usr/src/
# make -j2 buildkernel KERNCONF=KERN
# make installkernel KERNCONF=KERN
# rm -r /usr/obj
# make -j2 buildworld
# CUSTOM_WORLD ####################
# make installworld
# make installworld DESTDIR=/usr/ANONI
# make distribution DESTDIR=/usr/ANONI
# cp -R /usr/local/ /usr/ANONI/usr/local/
# zpool export usb
# SHADOW_WORLD ####################
# zpool import usb -o altroot=/usr/ANONI/mnt usb
# jail -c anoni
# jls
# jexec 1 /bin/csh
# perl usb/KERN/jinstall/1.WORLD /usb
# perl usb/KERN/jinstall/2.ANONI /usb hostname
# vim rc.conf
# exit
# zpool export usb
# unplug usb
# reboot
# --- REBOOT ---
# NORM_WORLD ######################
##### login as con
##### pass: con
# hostname
# uname -a
# ifconfig
# ls
# cd
# vim
# less
# TXN_$KEY
# RABBIT_HOLE #####################
#### plug in usb
#### usr usb host clan
# con@node /~$ echo 'con usb host wheel' > ~/ted
# con@node /~$ cp ~/ted /usr/ANONI/HIVE/FEED/norm/ 
#### wait for demon to wake up 10 min
#### DEMON will mount usb and create a key directory in home ~/
# cd
# pwd
# ls
#### $KEY = dir name of remote usr
#### host is the ip4 of host
# cp $KEY/id_rsa ~/.ssh/
# chmod -R 700 ~/
# c
# cat $KEY/p
# ssh $KEY@host
#### type contents of p with no spaces
# ifconfig
# su
#### pass = root
---- RABBIT ----
# root@node /root$ perl usb/KERN/install/4.POSTJAIL
# root@node /root$ perl usb/KERN/install/5.MAP
# root@node /root$ echo 'your_initator_manifest' >> /etc/motd
###################################
# MAP #############################
/root/         warren
/bin/
/sbin/
/etc/
/tmp/
/CLAN/         clan REP
/KRIP/         pools of unassigned $KEY
/KRIP/norm     mined $KEY named after sha256
/KRIP/lord     mined $KEY named after sha256
/KRIP/pass     pass named after sha256
/usr/home/     lord home dir
/usr/pool/      scp
/usr/ANONI/
/usr/ANONI/HIVE/
/usr/ANONI/nfs/     
/usr/ANONI/LIST/      file lists
/usr/ANONI/src/       system source
# TODO ############################
BRICK: logs clans config
MORSE: ping-updates
bin/ROTATE
tmux
pedrk
create zroot bootable flash
sub krip network harvest pools
pedrk httpd
http -> ssh
10 mobo/cpu sets
kickstarter
4 spray painted sets
usb-flash
ntp
KERN
start.if
src.conf
login.conf
CLAN
devfs ruleset host/jail
chmod / general hardening
ports / mods
# REP #############################
/CLAN/pool/ - host file pool 
/CLAN/src/  - host system src 
/CLAN/log/  - host log 
append-only clan files 
line { sha256 timestamp location clan }

usr enhances code
places it for upload
all sys REP++ CLAN
owner file in src

usr tips ED to scrape
digest of all files
concatenate CLAN repfile
if unique $KEY rewarded

clan notary: log, file-index, TXN-witness
retrace simple if subsequent review flag-bad 

network verify & index
relative $KEY dividend
REP++ CLAN monthly
CLAN TXN REP for zfs quota increase
CLAN TXN REP new clan
$KEY distributed in clan chests
	usr -> con -> ssh node -> clan -> chest -> BANK_ID
	BANK -> $KEY -> tunnels -> BANK_ID -> usb
# LINK ############################
new_node KIKE {clan} -> node_x KIKE
node_x -> add_clan add_xclan -> $KEY deposit
# PVP #############################
pvp - process vs process
	kill9 nukes, nice-hits, node-black-list
# SSH #############################
shell
scp time-limited resume
p2p tunnels
reverse-shell
firewall-hole
# CHRON ###########################
# 10day - overwrite accessed users
# 	- 10 jails rotated per day
# 	- 100k $KEY in 10 day
# 	- $KEY buyback
# day   - uninterrupted service
#       - specific-access only
#       - $KEY for certain day
# work  - hours shell alive
# PATIENCE ########################
DEMON need much sleep
actions take time
harvest emphasis 
multi-terminal emphasis
# AUTHENTICATION  #################
pass       : root
pass       : con
OTOPSK     : scp norm
OTOPSK & printed-pass : lord heir
# HIVE ############################
TED  - console $KEY shift
CAM  - archivist 
IRO  - get
WUF  - wakeup
ALEX - krip

    - file digest
    - proxy
    - tar
    - nmap
KIKE    - p2p $KEY tunnels 
JAIL    - chron jail rotate
TEST    - usr trials
MAID    - host cleanup

